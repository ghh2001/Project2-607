vennDiagram = draw.pairwise.venn(belowPoverty,foreignLanguage,cross.area=joint,category = c(" Below PL","Speak FL"), fill = c('blue', 'green'))
#install.packages('VennDiagram')
library(VennDiagram,grid)
library (VennDiagram)
# these data are from the American Community Survey provided with the exercise
belowPoverty = 14.6
foreignLanguage  = 20.7
joint_both = 4.2
## draw the VennDiagram based on the data above
grid.newpage()
vennDiagram = draw.pairwise.venn(belowPoverty,foreignLanguage,cross.area=joint,category = c(" Below PL","Speak FL"), fill = c('blue', 'green'))
AbovePovertyLine = 100-belowPoverty
BelowWLang = AbovePovertyLine - foreignLanguage
BelowWLang
belowPoverty+foreignLanguage-joint_both
AnswerD<-belowPoverty+foreignLanguage-joint_both
AnswerD
AbovePovertyLine = 100-belowPoverty
AnswerE = AbovePovertyLine - foreignLanguage
AnswerE
belowPoverty * foreignLanguage
answerF<-(belowPoverty * foreignLanguage )/100
answerF
femBlue = c(78,19,11)
femBrown = c(23,23,9)
femGreen = c(13,12,16)
df = data.frame(femBlue,femBrown,femGreen)
row.names(df) = c("maleBlue","maleBrown","maleGreen")
cbind(df, Total = rowSums(df))
femaleBlue = c(78,19,11)
femaleBrown = c(23,23,9)
femaleGreen = c(13,12,16)
df = data.frame(femaleBlue,femaleBrown,femaleGreen)
row.names(df) = c("maleBlue","maleBrown","maleGreen")
cbind(df, Total = rowSums(df))
hardcover = c(13,59)
paperback = c(59,8)
df230 = data.frame(hardcover,paperback)
row.names(df302)= c('Fiction','nonFiction')
hardcover = c(13,59)
paperback = c(59,8)
df230 = data.frame(hardcover,paperback)
row.names(df230)= c('Fiction','nonFiction')
cbind(df230, Total = rowSums(df230))
probDraw1 = 28/95
probDraw2 = 59/94
prob2 = probDraw1*probDraw2
prob2
probDraw1st = 28/95
probDraw2nd = 59/94
prob2 = probDraw1st*probDraw2nd
prob2
probDraw1st = 72/95
probDraw2nd = 28/94
prob2 = probDraw1st*probDraw2nd
prob2
probDraw1 = 72/95
probDraw2 = 28/95
prob2Given1 = probDraw1*probDraw2
prob2Given1
BagNumb = c(0,1,2)
fBaggageCost = c(0,25,35)
BaggePercent = c(.54,.34,.12)
df3 = data.frame(BagNumb,BaggageCost,BaggePercent)
BagNumb = c(0,1,2)
fBaggageCost = c(0,25,35)
BaggePercent = c(.54,.34,.12)
df238 = data.frame(BagNumb,BaggageCost,BaggePercent)
BagNumb = c(0,1,2)
BaggageCost = c(0,25,35)
BaggePercent = c(.54,.34,.12)
df238 = data.frame(BagNumb,BaggageCost,BaggePercent)
df238
row.names(df3) = c('Amount of bags','cost of baggage','probability of event')
BagNumb = c(0,1,2)
BagCost = c(0,25,35)
BagPercent = c(.54,.34,.12)
df238 = data.frame(BagNumb,BaggCost,BagPercent)
BagNumb = c(0,1,2)
BagCost = c(0,25,35)
BagPercent = c(.54,.34,.12)
df238 = data.frame(BagNumb,BagCost,BagPercent)
print(df238)
row.names(df238) = c('Amount of bags','cost of baggage','Percentage of Bag event')
df238$eV = df3$fBaggageCost*df3$BaggePercent
df238$eV = df238$fBaggageCost*df238$BaggePercent
df238$eV = df238$fBagCost*df238$BagPercent
## Rev
df238$Rev = df238$fBagCost*df238$BagPercent
eVpp = sum(df23$Rev)
## Rev
df238$Rev = df238$fBagCost*df238$BagPercent
row.names(df238) = c('Amount of bags','cost of baggage','Percentage of Bag event')
BagNumb = c(0,1,2)
BagCost = c(0,25,35)
BagPercent = c(.54,.34,.12)
df238 = data.frame(BagNumb,BagCost,BagPercent)
print(df238)
row.names(df238) = c('Amount of bags','cost of baggage','Percentage of Bag event')
## Rev
df238$Rev = df238$BagCost*df238$BagPercent
eVpp = sum(df238$Rev)
variancRevpp = var(df238$Rev)
sdpp = sd(df238$Ref)
## Rev
df238$Rev = df238$BagCost*df238$BagPercent
RevPerPassger = sum(df238$Rev)
variancRevPerPassger = var(df238$Rev)
sdPerPassp = sd(df238$Ref)
RevPerPassger*120
sdPerPassp*120
sdPerPassp*120
BagNumb = c(0,1,2)
BagCost = c(0,25,35)
BagPercent = c(.54,.34,.12)
df238 = data.frame(BagNumb,BagCost,BagPercent)
print(df238)
row.names(df238) = c('Amount of bags','cost of baggage','Percentage of Bag event')
## Rev
df238$Rev = df238$BagCost*df238$BagPercent
RevPerPassger = sum(df238$Rev)
variancRevPerPassger = var(df238$Rev)
sdPerPassp = sd(df238$Ref)
RevPerPassger = sum(df238$Rev)
RevPerPassger
variancRevPerPassger
sdPerPassp
print (sdPerPass)
BagNumb = c(0,1,2)
BagCost = c(0,25,35)
BagPercent = c(.54,.34,.12)
df238 = data.frame(BagNumb,BagCost,BagPercent)
print(df238)
row.names(df238) = c('Amount of bags','cost of baggage','Percentage of Bag event')
## Rev
df238$Rev = df238$BagCost*df238$BagPercent
RevPerPassger = sum(df238$Rev)
RevPerPassger
variancRevPerPassger = var(df238$Rev)
variancRevPerPassger
sdPerPassp = sd(df238$Ref)
sdPerPassp
RevPerPassger
Rev120Passgr<-RevPerPassger*120
Rev120Passgr
sd120Passgr<-sdPerPassp*120
sd120Passgr
barplot(PercentIncome,xlab='Income distribution')
income2009 = c("$1 - $9,999 or less",
"$10,000 to $14,999",
"$15,000 to $24,999",
"$25,000 to $34,999",
"$35,000 to $49,999",
"$50,000 to $64,000",
"$65,000 to $74,999",
"$75,000 to $99,999",
"$100,000 or more")
PercentIncome = c(2.2,4.7,15.8,18.3,21.2,13.9,5.8,8.4,9.7)
Answer244b = sum(PercentIncome[1:5])
Answer244b = sum(PercentIncome[1:5])
Answer244b
Asnwer244c
Asnwer244c<- Answer244b*.41
Asnwer244c
library(tidyr)
library(dplyr)
library(ggplot2)
library(sqldf)
library(magrittr)
library(DT)
dataraw2 <- read.csv ("D:/Project2 Week6 Due Oct7 GH DataToUse/Doctor Who Time Travel Journeys.csv")
print(dataraw2)
Data11 <- dataraw2 %>%
select (c (Doctor.Who.season, doctor.actor,ep..no,from,estimated.from,
planet,sub.location, location)
)
summary (Data11)
head(Data11)
tail(Data11)
Data11 <- dataraw2 %>%
select (c (Doctor.Who.season, doctor.actor,ep..no,from,estimated.from,
planet,sub.location, location)
)
summary (Data11)
head(Data11)
tail(Data11)
Data31 <- Data11 [-98,]
print (Data31)
Data51 <-
Data31 %>%
# gather( Product, YN, c(6:14), na.rm = TRUE)  %>%
spread(planet,sub.location )
#Error: Duplicate identifiers for rows (59, 98), this error was fixed in the earlier block, otherwise this  block will not run
#   group_by(State)  %>%
#    arrange(State)
summary (Data51)
head(Data51)
tail(Data51)
Data51 <-
Data31 %>%
spread(planet,sub.location ) %>%
#Error: Duplicate identifiers for rows (59, 98), this error was fixed in the earlier block, otherwise this  block will not run
group_by(from)  %>%
arrange(from)
summary (Data51)
head(Data51)
tail(Data51)
Data71 <- Data51 %>%
group_by (Doctor.Who.season)
head(Data71)
tail (Data71)
Data51 <-
Data31 %>%
spread(planet,sub.location ) %>%
#Error: Duplicate identifiers for rows (59, 98), this error was fixed in the earlier block, otherwise this  block will not run
group_by(from)  %>%
arrange(from)
# this (from) variable is the year variable
summary (Data51)
head(Data51)
tail(Data51)
print(Data51)
Data71 <- Data51 %>%
group_by (Doctor.Who.season)
head(Data71)
tail (Data71)
Data71 <- Data51 %>%
group_by (Doctor.Who.season)
head(Data71)
tail (Data71)
# Analyse the data by season of the show
Data71 <- Data51 %>%
group_by (Doctor.Who.season)
head(Data71)
tail (Data71)
Print(Data71)
# Analyse the data by season of the show
Data71 <- Data51 %>%
group_by (Doctor.Who.season)
head(Data71)
tail (Data71)
print(Data71)
write.csv (Data71,'Data71DoctorsWhoTravel.csv')
write.csv (Data11,'Data51DoctorsWhoTravel.csv')
Data51 <-
Data31 %>%
spread(planet,sub.location ) %>%
group_by(from)  %>%
arrange(from)
# this (from) variable is the year variable
summary (Data51)
head(Data51)
tail(Data51)
#print(Data51)
library(dplyr)
library(knitr)
library(DT)
library(shiny)
dfraw <- read.csv("New_York_City_Leading_Causes_of_Death.csv", header=TRUE, sep=",")
datatable(dfraw)
getwd()
getwd()
setwd('D:/Project2 Week6 Due Oct7 GH DataToUse')
getwd()
setwd('D:/Project2 Week6 Due Oct7 GH DataToUse')
```
setwd ('D:/Project2 Week6 Due Oct7 GH DataToUse')
library(dplyr)
library(knitr)
library(DT)
library(shiny)
``{r message=FALSE, warning=FALSE}
df1 <- dfraw %>%
subset(select = c(Sex,Year,Cause.of.Death,Count)) %>%
group_by(Sex,Year) %>%
filter(Count == max(Count)) %>%
distinct(Sex,Year,Cause.of.Death,Count)
datatable(df1)
dfraw <- read.csv("New_York_City_Leading_Causes_of_Death.csv", header=TRUE, sep=",")
datatable(dfraw)
```{r message=FALSE, warning=FALSE}
df1 <- dfraw %>%
subset(select = c(Sex,Year,Cause.of.Death,Count)) %>%
group_by(Sex,Year) %>%
filter(Count == max(Count)) %>%
distinct(Sex,Year,Cause.of.Death,Count)
datatable(df1)
df2 <- df1 %>%
subset(select = c(Ethnicity,Year,Cause.of.Death,Count)) %>%
group_by(Ethnicity,Year) %>%
filter(Count == max(Count)) %>%
distinct(Ethnicity,Year,Cause.of.Death,Count)
datatable(df2)
```{r message=FALSE, warning=FALSE}
df1 <- dfraw %>%
subset(select = c(Sex,Year,Cause.of.Death,Count)) %>%
group_by(Sex,Year) %>%
filter(Count == max(Count)) %>%
distinct(Sex,Year,Cause.of.Death,Count)
datatable(df1)
```
dfraw <- read.csv("New_York_City_Leading_Causes_of_Death.csv", header=TRUE, sep=",")
datatable(dfraw)
```{r message=FALSE, warning=FALSE}
df1 <- dfraw %>%
subset(select = c(Sex,Year,Cause.of.Death,Count)) %>%
group_by(Sex,Year) %>%
filter(Count == max(Count)) %>%
distinct(Sex,Year,Cause.of.Death,Count)
datatable(df1)
```
setwd ('D:/Project2 Week6 Due Oct7 GH DataToUse')
```{r message=FALSE, warning=FALSE}
library(dplyr)
library(knitr)
library(DT)
library(shiny)
#options(dplyr.width = Inf)
dfraw <- read.csv("New_York_City_Leading_Causes_of_Death.csv", header=TRUE, sep=",")
datatable(dfraw)
```{r message=FALSE, warning=FALSE}
df1 <- dfraw %>%
subset(select = c(Sex,Year,Cause.of.Death,Count)) %>%
group_by(Sex,Year) %>%
filter(Count == max(Count)) %>%
distinct(Sex,Year,Cause.of.Death,Count)
datatable(df1)
```{r message=FALSE, warning=FALSE}
df2 <- df1 %>%
subset(select = c(Ethnicity,Year,Cause.of.Death,Count)) %>%
group_by(Ethnicity,Year) %>%
filter(Count == max(Count)) %>%
distinct(Ethnicity,Year,Cause.of.Death,Count)
datatable(df2)
```
```{r message=FALSE, warning=FALSE}
df_3 <- df1 %>%
subset(select = c(Year,Cause.of.Death,Count)) %>%
group_by(Year, Cause.of.Death, the_min = min(Count), the_max = max(Count), the_diff = (the_max - the_min)) %>%
count(Year, Cause.of.Death, max(the_diff))
datatable(df_3)
```{r message=FALSE, warning=FALSE}
df_4 <- df1 %>% subset(select = c(Year,Cause.of.Death,Count)) %>%
group_by(Year, Cause.of.Death, the_min = min(Count), the_max = max(Count), the_diff = (the_max - the_min)) %>%
count(Year, Cause.of.Death, min(the_diff))
datatable(df_4)
```
getwd()
setwd ('D:/Project2 Week6 Due Oct7 GH DataToUse')
library(dplyr)
library(knitr)
library(DT)
library(shiny)
options(dplyr.width = Inf)
dfraw <- read.csv("New_York_City_Leading_Causes_of_Death.csv", header=TRUE, sep=",")
datatable(dfraw)
```{r message=FALSE, warning=FALSE}
df1 <- dfraw %>%
subset(select = c(Sex,Year,Cause.of.Death,Count)) %>%
group_by(Sex,Year) %>%
filter(Count == max(Count)) %>%
distinct(Sex,Year,Cause.of.Death,Count)
datatable(df1)
```
df_4 <- df %>% subset(select = c(Year,Cause.of.Death,Count)) %>%
group_by(Year, Cause.of.Death, the_min = min(Count), the_max = max(Count), the_diff = (the_max - the_min)) %>%
count(Year, Cause.of.Death, min(the_diff))
datatable(df_4)
knitr::opts_chunk$set(echo = TRUE)
getwd()
NYPDCollision <- tbl_df(read.csv("NYPDAug2017_Motor_Vehicle_Collisions.csv", stringsAsFactors = FALSE, check.names = FALSE))
getwd()
NYPDCollision <- tbl_df(read.csv("NYPDAug2017_Motor_Vehicle_Collisions.csv", stringsAsFactors = FALSE, check.names = FALSE))
#snapshot of data
head(NYPDCollision)
NYPDCollision <- tbl_df(read.csv("NYPDAug2017_Motor_Vehicle_Collisions.csv", stringsAsFactors = FALSE, check.names = FALSE))
#snapshot of data
head(NYPDCollision)
NYPDCollision <- tbl_df(read.csv("NYPDAug2017_Motor_Vehicle_Collisions.csv", stringsAsFactors = FALSE, check.names = FALSE))
#snapshot of data
head(NYPDCollision)
tail(NYPDCollision)
NYPDCollision.ByInjuryType <- NYPDCollision %>% gather(InJury_type, Freq, 4:15)
NYPDCollision.ByInjuryType <- NYPDCollision %>% gather(InJury_type, Freq, 4:15)
library(tidyr)
library(dplyr)
library(tidyr)
library(dplyr)
NYPDCollision <- tbl_df(read.csv("NYPDAug2017_Motor_Vehicle_Collisions.csv", stringsAsFactors = FALSE, check.names = FALSE))
head(NYPDCollision)
tail(NYPDCollision)
NYPDCollision.ByInjuryType <- NYPDCollision %>% gather(InJury_type, Freq, 4:15)
NYPDCollision.ByInjuryType <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type, Freq, Number_of_Motor_Vehicle_Collisions, Vehicles_or_Motorists_Involved, Injury_or_Fatal_Collisions)
NYPDCollision.ByInjuryType <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type, Freq, Number_of_Motor_Vehicle_Collisions, Vehicles_or_Motorists_Involved, Injury_or_Fatal_Collisions)
head(NYPDCollision.ByInjuryType)
NYPDCollision.ByInjuryType <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type, Freq, c("Number_of_Motor_Vehicle_Collisions", "Vehicles_or_Motorists_Involved", "Injury_or_Fatal_Collisions"))
head(NYPDCollision.ByInjuryType)
NYPDCollision.ByInjuryType2 <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type, Freq, c("Number_of_Motor_Vehicle_Collisions", "Vehicles_or_Motorists_Involved", "Injury_or_Fatal_Collisions"))
head(NYPDCollision.ByInjuryType2)
NYPDCollision.ByInjuryType2 <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type, Freq, c("Number_of_Motor_Vehicle_Collisions", "Vehicles_or_Motorists_Involved", "Injury_or_Fatal_Collisions","MotoristsInjured","MotoristsKilled","PassengInjured","CyclistsInjured",
"CyclistsKilled","PedestrInjured ","PedestrKilled" ))
NYPDCollision.ByInjuryType2 <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type, Freq, c("Number_of_Motor_Vehicle_Collisions", "Vehicles_or_Motorists_Involved", "Injury_or_Fatal_Collisions","MotoristsInjured","MotoristsKilled","PassengInjured","CyclistsInjured",
"CyclistsKilled","PedestrInjured","PedestrKilled" ))
head(NYPDCollision.ByInjuryType2)
NYPDCollision.ByInjuryType2 <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type, Freq, c("Number_of_Motor_Vehicle_Collisions", "Vehicles_or_Motorists_Involved", "Injury_or_Fatal_Collisions","MotoristsInjured","MotoristsKilled","PassengInjured","CyclistsInjured",
"CyclistsKilled","PedestrInjured","PedestrKilled","Bicycle" ))
head(NYPDCollision.ByInjuryType2)
NYPDCollision.ByInjuryType2 <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type,NofCases, c("Number_of_Motor_Vehicle_Collisions", "Vehicles_or_Motorists_Involved", "Injury_or_Fatal_Collisions","MotoristsInjured","MotoristsKilled","PassengInjured","CyclistsInjured",
"CyclistsKilled","PedestrInjured","PedestrKilled","Bicycle" ))
head(NYPDCollision.ByInjuryType2)
NYPDCollision.ByInjuryType2 <- NYPDCollision %>%
#gather(InJury_type, Freq, 4:15)
gather(InJury_type,NofCases, c("Number_of_Motor_Vehicle_Collisions", "Vehicles_or_Motorists_Involved", "Injury_or_Fatal_Collisions","MotoristsInjured","MotoristsKilled","PassengInjured","CyclistsInjured",
"CyclistsKilled","PedestrInjured","PedestrKilled","Bicycle" ))
head(NYPDCollision.ByInjuryType2)
tail(NYPDCollision.ByInjuryType2)
NYPDCollision.ByInjuryType_Max <- NYPDCollision.ByInjuryType2 %>%
group_by(InJury_type) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByInjuryType_Min <- NYPDCollision.ByInjuryType2 %>%
group_by(InJury_type) %>% arrange(NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByInjuryType_Max)
(NYPDCollision.ByInjuryType_Min)
NYPDCollision.ByInjuryType_Max <- NYPDCollision.ByInjuryType2 %>%
group_by(InJury_type) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByInjuryType_Min <- NYPDCollision.ByInjuryType2 %>%
group_by(InJury_type) %>% arrange(NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByInjuryType_Max)
(NYPDCollision.ByInjuryType_Min)
```{r max-InjuryByBoro}
NYPDCollision.ByBoro_Max2 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByBoro_Min2 <- NYPDCollision.ByInjuryType2 %>%
group_by(IBoro_Location) %>% arrange(NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByBoro_Max2 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByBoro_Min2 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location) %>% arrange(NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByBoro_Max2)
(NYPDCollision.ByBoro_Min2)
NYPDCollision.ByBoro_Max3 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location, InJury_type) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByBoro_Min2 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location, InJury_type) %>% arrange(NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByBoro_Max3)
(NYPDCollision.ByBoro_Min3)
NYPDCollision.ByBoro_Max3 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location, InJury_type) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByBoro_Min2 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location, InJury_type) %>% arrange(NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByBoro_Max3)
(NYPDCollision.ByBoro_Min3)
NYPDCollision.ByBoro_Max3 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location, InJury_type) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
NYPDCollision.ByBoro_Min3 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location, InJury_type) %>% arrange(NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByBoro_Max3)
(NYPDCollision.ByBoro_Min3)
NYPDCollision.ByBoro_Max2 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByBoro_Max2)
write.csv(NYPDCollision.ByBoro_Max2.csv)
write.csv(NYPDCollision.ByBoro_Max2, NYPDCollisionByBoro_Max.csv)
write.csv(NYPDCollision.ByBoro_Max2, 'NYPDCollisionByBoro_Max.csv')
NYPDCollision.ByBoroInjuryType_Max3 <- NYPDCollision.ByInjuryType2 %>%
group_by(Boro_Location, InJury_type) %>%
arrange(-NofCases) %>%
filter(row_number()==1)
(NYPDCollision.ByBoroInjuryType_Max3)
write.csv(NYPDCollision.ByBoroInjuryType_Max3, 'NYPDCollisionByBoro_Max.csv')
write.csv(NYPDCollision.ByBoroInjuryType_Max3, 'NYPDCollisionByBoroInjuryType_Max.csv')
```{r}
getwd()
```
